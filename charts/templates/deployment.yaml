apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jira-software.fullname" . }}
  labels:
    app: {{ template "jira-software.name" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- include "jira-software.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "jira-software.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jira-software.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.caCerts }}
      initContainers:
        - name: ca-certs
          image: adoptopenjdk/openjdk11:alpine
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - cp -f ${JAVA_HOME}/lib/security/cacerts /var/atlassian/application-data/jira/cacerts;
              for f in /var/atlassian/application-data/jira/secrets/cas/*;
              do keytool -importcert -file ${f} -alias $(basename ${f}) -keystore /var/atlassian/application-data/jira/cacerts -storepass {{ .Values.caCerts.storepass | quote }} -trustcacerts -noprompt;
              done;
          volumeMounts:
            - mountPath: /var/atlassian/application-data/jira
              name: {{ include "jira-software.pvcHome" . }}
            - mountPath: /var/atlassian/application-data/jira/secrets/cas
              name: jira-cas
          {{- with .Values.caCertsEnv }}
          env:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
      {{- end }}
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ include "jira-software.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "jira-software.fullname" . }}-cm
          env:
            - name: ATL_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "jira-software.fullname" . }}-secret
                  key: postgres_password
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /var/atlassian/application-data/jira
              name: {{ include "jira-software.pvcHome" . }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "jira-software.tplValue" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: {{ include "jira-software.pvcHome" . }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "jira-software.pvcHome" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.caCerts }}
        - name: jira-cas
          secret:
            secretName: {{ .Release.Name }}-certificates
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "jira-software.tplValue" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
